version: '3.7'

services:
  php-fpm:
    build: docker
    container_name: 'php'
    ports:
      - '9000:9000'
    volumes:
      - ./:/app
    working_dir: /app

  nginx:
    image: nginx
    container_name: 'nginx'
    working_dir: /app
    ports:
      - '7777:80'
    volumes:
      - ./:/app
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf

#  postgres:
#    image: postgres:15
#    ports:
#      - 5432:5432
##      - 15432:5432
#    container_name: 'postgres'
#    working_dir: /app
#    restart: always
#    environment:
#      POSTGRES_DB: 'iriska_store' #  изменить на енв
#      POSTGRES_USER: 'iriska'
#      POSTGRES_PASSWORD: 'postgres'
#    volumes:
#      - dump:/app/dump
#      - postgres:/var/lib/postgresql/data

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: "iriska_store" # переделать на енв
      POSTGRES_USER: "iriska"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data #это меня очень смущает
#    networks:
#      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 2181:2181
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - 9900:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - "kafka"

####> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-16}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-iriska_store}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###

#volumes:
#  dump:
#  postgres:

volumes:
  postgres_data:

###> doctrine/doctrine-bundle ###
#  database_data:
###< doctrine/doctrine-bundle ###
